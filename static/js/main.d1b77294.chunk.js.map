{"version":3,"sources":["components/Navbar/NavTab.js","components/Hero/index.js","components/Container/index.js","components/Row.js","components/Col.js","components/Card/index.js","pages/Home.js","App.js","serviceWorker.js","index.js"],"names":["styles","navbarStyle","justifyContent","Navbar","className","to","window","location","pathname","style","id","Hero","props","backgroundImage","children","Container","fluid","Row","Col","size","split","map","join","Card","src","alt","Home","state","clicked","score","welcomeMessage","handleClick","setState","this","onClick","Component","App","NavTab","exact","path","component","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.d1b77294.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./style.css\";\r\n\r\n\r\n\r\nconst styles = {\r\n  navbarStyle: {\r\n    justifyContent: \"flex-end\",\r\n  },\r\n};\r\n\r\n\r\nfunction Navbar() {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-light text-white bg-primary\">\r\n      <Link className=\"navbar-brand text-white\" to=\"/\">\r\n        Clicky Game\r\n      </Link>\r\n      <div>\r\n        <ul className=\"navbar-nav\">\r\n          <li className=\"nav-item\">\r\n            <Link\r\n              to=\"/\"\r\n              className={\r\n                window.location.pathname === \"/\"\r\n                  ? \"nav-link active\"\r\n                  : \"nav-link\"\r\n              }\r\n            ></Link>\r\n          </li>\r\n          <h2>Click an Image to Begin!</h2>\r\n          <span>\r\n            <h2 style={styles.navbarStyle} id=\"score\">\r\n              Score:0\r\n            </h2>\r\n          </span>\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Hero (props) {\r\n  return (\r\n    <div\r\n      className=\"hero text-center\"\r\n      style={{ backgroundImage: `url(${props.backgroundImage})` }}\r\n    >\r\n      {props.children}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Hero;\r\n","import React from \"react\";\r\n\r\nfunction Container(props) {\r\n  return (\r\n    <div className={`container${props.fluid ? \"-fluid\" : \"\"}`} {...props} />\r\n  );\r\n}\r\n\r\nexport default Container;\r\n","import React from \"react\";\n\nfunction Row(props) {\n  return <div className={`row${props.fluid ? \"-fluid\" : \"\"}`}>{props.children}</div>;\n}\n\nexport default Row;\n","import React from \"react\";\n\n// This Col component offers us the convenience of being able to set a column's \"size\" prop instead of its className\n// We can also omit the col- at the start of each Bootstrap column class, e.g. size=\"md-12\" instead of className=\"col-md-12\"\n\nfunction Col(props) {\n  const size = props.size.split(\" \").map(size => \"col-\" + size).join(\" \");\n\n  return (\n    <div className={size}>\n      {props.children}\n    </div>\n  );\n}\n\nexport default Col;\n","import React from \"react\";\nimport \"./style.css\";\nimport Row from \"../Row.js\";\nimport Col from \"../Col.js\";\nimport CardBtn from \"../CardBtn\"\n\n\n\n\nfunction Card(props) {\n  return (\n    <div className=\"wrapper\">\n      <Row>\n        <Col size=\"sm-4\">\n          \n            <div className=\"card\" id=\"gamora\">\n              <img src={\"../images/Gamora.jpg\"} alt=\"gamora\" />\n            </div>\n        \n        </Col>\n\n        <Col size=\"sm-4\">\n          <div className=\"card\" id=\"blackWidow\">\n            <img src={\"../images/black-widow.jpg\"} alt=\"black-widow\" />\n          </div>\n        </Col>\n        <Col size=\"sm-4\">\n          <div className=\"card\">\n            <img src={\"../images/black-panther.jpg\"} alt=\"black-panther\" />\n          </div>\n        </Col>\n      </Row>\n\n      <Row>\n        <Col size=\"sm-4\">\n          <div className=\"card\" id=\"capt-america\">\n            <img src={\"../images/cptn-america2.jpg\"} alt=\"capt-america\" />\n          </div>\n        </Col>\n\n        <Col size=\"sm-4\">\n          <div className=\"card\" id=\"capt-marvel\">\n            <img src={\"../images/cptn-marvel.jpg\"} alt=\"capt-marvel\" />\n          </div>\n        </Col>\n\n        <Col size=\"sm-4\">\n          <div className=\"card\" id=\"groot\">\n            <img src={\"../images/groot.jpg\"} alt=\"groot\" />\n          </div>\n        </Col>\n      </Row>\n\n      <Row>\n        <Col size=\"sm-4\">\n          <div className=\"card\" id=\"hawkeye\">\n            <img src={\"../images/hawkeye.jpg\"} alt=\"hawkeye\" />\n          </div>\n        </Col>\n\n        <Col size=\"sm-4\">\n          <div className=\"card\" id=\"hulk\">\n            <img src={\"../images/hulk.jpg\"} alt=\"hulk\" />\n          </div>\n        </Col>\n\n        <Col size=\"sm-4\">\n          <div className=\"card\" id=\"iron-man\">\n            <img src={\"../images/iron-man.jpg\"} alt=\"iron-man\" />\n          </div>\n        </Col>\n      </Row>\n\n      <Row>\n        <Col size=\"sm-4\">\n          <div className=\"card\" id=\"scarlet-witch\">\n            <img src={\"../images/Scarlet-Witch.jpg\"} alt=\"scarlet\" />\n          </div>\n        </Col>\n\n        <Col size=\"sm-4\">\n          <div className=\"card\" id=\"spiderman\">\n            <img src={\"../images/spiderman.jpg\"} alt=\"spiderman\" />\n          </div>\n        </Col>\n        <Col size=\"sm-4\">\n          <div className=\"card\" id=\"thor\">\n            <img src={\"../images/thor.jpg\"} alt=\"thor\" />\n          </div>\n        </Col>\n      </Row>\n    </div>\n  );\n}\n\nexport default Card;\n","import React, { Component }  from \"react\";\r\nimport Hero from \"../components/Hero\";\r\nimport Container from \"../components/Container\";\r\nimport Card from \"../components/Card\";\r\nimport images from \"../images.json\";\r\n//import { render } from \"@testing-library/react\";\r\n\r\nfunction Shuffle() {\r\n  var unshuffled = images;\r\n  var shuffled = unshuffled\r\n    .map((a) => ({ sort: Math.random(), value: a }))\r\n    .sort((a, b) => a.sort - b.sort)\r\n    .map((a) => a.value)\r\n}\r\n/*function shuffleArray(array) {\r\n  for (let i = array.length - 1; i > 0; i--) {\r\n    const j = Math.floor(Math.random() * (i + 1));\r\n    [array[i], array[j]] = [array[j], array[i]];\r\n  }\r\n}*/\r\n\r\nclass Home extends Component {\r\n  state = {\r\n    clicked: false,\r\n    score: 0,\r\n    welcomeMessage: \"Click on an image to earn points. Click on each image only once!\"\r\n  };\r\n  \r\n  handleClick = () => {\r\n    this.setState({\r\n      clicked: !this.state.clicked,\r\n      score: this.state.score + 1\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Hero backgroundImage=\"./images/double-bubble-dark.png\">\r\n          <h1>Clicky Game</h1>\r\n          <h3 className=\"text-white\">{this.state.welcomeMessage}</h3>\r\n        </Hero>\r\n        <Container>\r\n      <Card\r\n            //name={images[0].name}\r\n            //image={images[0].image}\r\n            onClick={this.handleClick}\r\n          />\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n  }\r\n\r\nexport default Home;\r\n","import React from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\"\nimport NavTab from \"./components/Navbar/NavTab\"\nimport Home from \"./pages/Home\"\n\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n        <NavTab />\n        <Route exact path = \"/\" component = {Home} />\n      </div>\n\n    </Router>\n\n\n    \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}